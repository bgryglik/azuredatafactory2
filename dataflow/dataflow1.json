{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Telemetry1",
					"description": "plik danych telemetrycznych"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "Errors1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "Failures1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "ErrorToColumns"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "window1"
				},
				{
					"name": "window24"
				},
				{
					"name": "FailuresToColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as integer,",
				"          volt as float,",
				"          rotate as float,",
				"          pressure as float,",
				"          vibration as float",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Telemetry1",
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as integer,",
				"          errorID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Errors1",
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as string,",
				"          failure as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Failures1",
				"Errors1 pivot(groupBy(datetime,",
				"          machineID),",
				"     pivotBy(errorID),",
				"     column1 = count(errorID),",
				"     columnNaming: '$N$V',",
				"     lateral: false) ~> ErrorToColumns",
				"Telemetry1, ErrorToColumns join(Telemetry1@datetime == ErrorToColumns@datetime",
				"     && Telemetry1@machineID == ErrorToColumns@machineID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          datetime = Telemetry1@datetime,",
				"          machineID = Telemetry1@machineID,",
				"          volt,",
				"          rotate,",
				"          pressure,",
				"          vibration,",
				"          datetime = ErrorToColumns@datetime",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 window(asc(datetime, true),",
				"     startRowOffset: -3L,",
				"     endRowOffset: 0L,",
				"     meanrotate = mean(rotate),",
				"          meanpressure = mean(pressure),",
				"          meanvibration = mean(vibration),",
				"          meanvolt = mean(volt),",
				"          stddevvolt = stddev(volt),",
				"     rangeSpecified: true) ~> window1",
				"window1 window(asc(datetime, true),",
				"     rangeSpecified: true,",
				"     startRowOffset: -24L,",
				"     endRowOffset: 0L,",
				"     meanrotate = mean(rotate),",
				"          meanpressure = mean(pressure),",
				"          meanvibration = mean(vibration),",
				"          meanvolt = mean(volt),",
				"          stddevvolot = stddev(volt)) ~> window24",
				"Failures1 pivot(groupBy(machineID,",
				"          datetime),",
				"     pivotBy(failure),",
				"     count = count(failure),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> FailuresToColumns"
			]
		}
	}
}